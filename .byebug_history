c
params[:post_id]
params
n
c
Post.first.likes.build
Post.first.likes
Post.first.like
params
Post.find(post_id).like
params
c
params
c
d
params
c
params
c
params
Like.create(params[:post_id])
params[:post_id]
params
c
params
like_params
    params.require(:like).permit(:post_id)
  def like_params
  # Never trust parameters from the scary internet, only allow the white list through.
  end
    @like = Like.find(params[:id])
  def set_like
  # Use callbacks to share common setup or constraints between actions.
  private
  end
    end
      format.json { head :no_content }
      format.html { redirect_to replies_url, notice: 'Like was successfully destroyed.' }
    respond_to do |format|
    @like.destroy
  def destroy
  # DELETE /likes/1.json
  # DELETE /likes/1
  end
    end
      end
        format.json { render json: @like.errors, status: :unprocessable_entity }
        format.html { render :edit }
      else
        format.json { render :show, status: :ok, location: @like }
        format.html { redirect_to @like, notice: 'Like was successfully updated.' }
      if @like.update(like_params)
    respond_to do |format|
  def update
  # PATCH/PUT /likes/1.json
  # PATCH/PUT /likes/1
  end
    @like = Like.create(like_params)
    debugger
  def create
  # POST /likes.json
  # POST /likes
  end
  def edit
  # GET /likes/1/edit
  end
    @like = Like.new
  def new
  # GET /likes/new
  end
  def show
  # GET /likes/1.json
  # GET /likes/1
  end
  def index
  # GET /likes.json
  # GET /likes
Lbefore_action :set_like, only: [:show, :edit, :update, :destroy]
like_params
c
like_params
n
params
like_params
like_parmas
c
